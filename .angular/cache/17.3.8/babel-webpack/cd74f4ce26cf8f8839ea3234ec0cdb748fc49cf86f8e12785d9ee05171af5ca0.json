{"ast":null,"code":"import { LibraryComponent } from './library/library.component';\nimport { EditSyntaxComponent } from './edit-syntax/edit-syntax.component';\nimport { GenerateColorSchemeComponent } from './generate-color-scheme/generate-color-scheme.component';\nimport { EditWorkbenchComponent } from './edit-workbench/edit-workbench.component';\nimport { UploadFromPictureComponent } from './upload-from-picture/upload-from-picture.component';\nimport { ColorSketchModule } from 'ngx-color/sketch';\nimport { FormsModule } from '@angular/forms';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"libraryComponent\"];\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    ngAfterViewInit() {\n      // Log libraryComponent to ensure it's available\n      console.log('ngAfterViewInit:', this.libraryComponent);\n    }\n    scrollToLibrary() {\n      if (this.libraryComponent && this.libraryComponent.nativeElement) {\n        this.libraryComponent.nativeElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start'\n        });\n      } else {\n        console.error('LibraryComponent is not available.', this.libraryComponent);\n      }\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      viewQuery: function AppComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.libraryComponent = _t.first);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 11,\n      vars: 0,\n      consts: [[\"libraryComponent\", \"\"], [1, \"scroll-container\"], [\"id\", \"editWorkbenchId\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"header\")(1, \"h1\");\n          i0.ɵɵtext(2, \"dahu\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(3, \"main\")(4, \"div\", 1);\n          i0.ɵɵelement(5, \"app-library\", null, 0)(7, \"app-generate-color-scheme\")(8, \"app-edit-workbench\", 2)(9, \"app-edit-syntax\")(10, \"app-upload-from-picture\");\n          i0.ɵɵelementEnd()();\n        }\n      },\n      dependencies: [CommonModule, ReactiveFormsModule, ColorSketchModule, FormsModule, ColorPickerModule, LibraryComponent, EditSyntaxComponent, GenerateColorSchemeComponent, EditWorkbenchComponent, UploadFromPictureComponent],\n      styles: [\"@import\\\"https://fonts.cdnfonts.com/css/inknut-antiqua\\\";button[_ngcontent-%COMP%]{color:#fff;padding:5px 20px;border-radius:4px;border:none}.back-to-top[_ngcontent-%COMP%]{position:fixed;bottom:20px;right:20px;font-size:large;font-weight:700;color:#fff;padding:10px 20px;border-radius:50%;border:none;cursor:pointer}header[_ngcontent-%COMP%]{background-color:var(--background-color);height:100px;width:100%;position:fixed;top:0;z-index:1000;box-shadow:0 2px 5px #0003}h1[_ngcontent-%COMP%]{margin-left:30px;color:var(--foreground-color);font-size:30px;font-weight:700;font-family:Inknut Antiqua,sans-serif}main[_ngcontent-%COMP%]{margin-top:100px}.scroll-container[_ngcontent-%COMP%]{height:100vh;overflow-y:auto;scroll-behavior:smooth}.scroll-container[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{height:100vh;display:flex;justify-content:center;align-items:center;scroll-snap-align:start}\"]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}