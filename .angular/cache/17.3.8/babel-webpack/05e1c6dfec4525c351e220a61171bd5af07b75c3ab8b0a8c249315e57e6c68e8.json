{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport IroColorPicker from '@jaames/iro';\nimport * as i0 from \"@angular/core\";\nexport let ColorPickerComponent = /*#__PURE__*/(() => {\n  class ColorPickerComponent {\n    constructor() {\n      this.colorChange = new EventEmitter();\n    }\n    ngAfterViewInit() {\n      console.log('ngAfterViewInit called');\n      this.colorPicker = new IroColorPicker('#defaultPicker', {\n        width: 250,\n        color: 'rgb(255, 0, 0)',\n        borderWidth: 1,\n        borderColor: '#fff'\n      });\n      this.colorPicker.on('color:change', color => {\n        console.log('Color changed:', color.hexString);\n        this.colorChange.emit(color.hexString);\n      });\n    }\n    static #_ = this.ɵfac = function ColorPickerComponent_Factory(t) {\n      return new (t || ColorPickerComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ColorPickerComponent,\n      selectors: [[\"app-color-picker\"]],\n      outputs: {\n        colorChange: \"colorChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 0,\n      consts: [[\"id\", \"defaultPicker\", 1, \"color-picker-container\"]],\n      template: function ColorPickerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0);\n        }\n      },\n      styles: [\".color-picker-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center}.color-picker-container[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-weight:400;font-size:20px}\"]\n    });\n  }\n  return ColorPickerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}