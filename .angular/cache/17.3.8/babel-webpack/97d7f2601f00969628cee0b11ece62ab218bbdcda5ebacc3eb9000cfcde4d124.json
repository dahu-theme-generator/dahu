{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"editWorkbench\"];\nfunction LibraryComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 6)(4, \"button\", 7);\n    i0.ɵɵtext(5, \"Apply\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function LibraryComponent_div_3_div_1_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.scrollToEditWorkbench());\n    });\n    i0.ɵɵtext(7, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const theme_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", theme_r3, \"\");\n  }\n}\nfunction LibraryComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, LibraryComponent_div_3_div_1_Template, 8, 1, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.themes);\n  }\n}\nfunction LibraryComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1, \"No themes yet :(\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LibraryComponent = /*#__PURE__*/(() => {\n  class LibraryComponent {\n    constructor() {\n      this.themes = ['Theme 1', 'Theme 2', 'Theme 3']; // Replace with actual data fetching logic\n      this.getPresets();\n      window.addEventListener('message', event => {\n        const message = event.data;\n        if (message.command === 'presets') {\n          this.themes = message.data.map(p => p.name);\n        }\n      });\n      // let presets: Preset[];\n      // getPresets(globalExtensionPath)\n      //   .then((ps) => {\n      //     ps = presets;\n      //     this.themes = presets.map(p => p.name);\n      //   })\n      //   .catch(err => console.log('error from library: ' + (err as Error).message));\n    }\n    getPresets() {\n      const vscode = window.acquireVsCodeApi();\n      vscode.postMessage({\n        command: 'getPresets'\n      });\n    }\n    savePreset(name) {\n      const vscode = window.acquireVsCodeApi();\n      vscode.postMessage({\n        command: 'savePreset',\n        data: {\n          name\n        }\n      });\n    }\n    ngAfterViewInit() {\n      console.log('ngAfterViewInit called');\n      console.log('Edit Workbench ViewChild:', this.editWorkbench);\n      if (this.editWorkbench && this.editWorkbench.nativeElement) {\n        console.log('Edit Workbench NativeElement:', this.editWorkbench.nativeElement);\n        this.editWorkbench.nativeElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start'\n        });\n      } else {\n        console.log(\"Could not find edit workbench element\");\n      }\n    }\n    // ngOnInit(): void {\n    //   console.log('Themes:', this.themes);\n    //   // Example data fetching logic\n    //   // Uncomment the next line to add themes and test dynamic blocks\n    //    this.themes = ['Theme 1', 'Theme 2', 'Theme 3'];\n    // }\n    scrollToEditWorkbench() {\n      const editWorkbenchElement = document.getElementById('editWorkbenchId');\n      if (editWorkbenchElement) {\n        editWorkbenchElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start'\n        });\n      } else {\n        console.log(\"Could not find edit workbench element\");\n      }\n    }\n    static #_ = this.ɵfac = function LibraryComponent_Factory(t) {\n      return new (t || LibraryComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LibraryComponent,\n      selectors: [[\"app-library\"]],\n      viewQuery: function LibraryComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editWorkbench = _t.first);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 6,\n      vars: 2,\n      consts: [[\"noThemes\", \"\"], [1, \"library-container\"], [\"class\", \"theme-blocks\", 4, \"ngIf\", \"ngIfElse\"], [1, \"theme-blocks\"], [\"class\", \"theme-block\", 4, \"ngFor\", \"ngForOf\"], [1, \"theme-block\"], [1, \"theme-buttons\"], [1, \"theme-button\"], [1, \"theme-button\", 3, \"click\"], [1, \"no-themes\"]],\n      template: function LibraryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n          i0.ɵɵtext(2, \"Library\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, LibraryComponent_div_3_Template, 2, 1, \"div\", 2)(4, LibraryComponent_ng_template_4_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const noThemes_r4 = i0.ɵɵreference(5);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.themes.length > 0)(\"ngIfElse\", noThemes_r4);\n        }\n      },\n      dependencies: [CommonModule, i1.NgForOf, i1.NgIf, FormsModule],\n      styles: [\".library-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100%;text-align:center}.theme-blocks[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin-top:20px}.theme-buttons[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.theme-block[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr,1fr,1fr;background-color:#ffffff1a;margin:10px 0;padding:10px 20px;border:2px;border-color:#000;height:60px;width:360px;align-items:center;border-radius:8px}button[_ngcontent-%COMP%]{background-color:transparent;border:none}.no-themes[_ngcontent-%COMP%]{margin-top:20px;font-size:16px;color:#f0f8ff}\"]\n    });\n  }\n  return LibraryComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}