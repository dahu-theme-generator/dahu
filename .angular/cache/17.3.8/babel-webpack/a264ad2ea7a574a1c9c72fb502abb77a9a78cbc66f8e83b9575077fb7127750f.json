{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction EditSyntaxComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\", 7);\n    i0.ɵɵelementStart(4, \"input\", 8);\n    i0.ɵɵlistener(\"input\", function EditSyntaxComponent_div_7_Template_input_input_4_listener($event) {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateColor($event.target.value, i_r2 + ctx_r2.currentPage * 5));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const color_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(color_r4.name);\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"background-color\", color_r4.hex);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", color_r4.hex);\n  }\n}\nexport let EditSyntaxComponent = /*#__PURE__*/(() => {\n  class EditSyntaxComponent {\n    constructor() {\n      this.colors = [{\n        name: 'Color 1',\n        hex: '#FF0000'\n      }, {\n        name: 'Color 2',\n        hex: '#00FF00'\n      }, {\n        name: 'Color 3',\n        hex: '#0000FF'\n      }, {\n        name: 'Color 4',\n        hex: '#FFFF00'\n      }, {\n        name: 'Color 5',\n        hex: '#FF00FF'\n      }, {\n        name: 'Color 6',\n        hex: '#008000'\n      }, {\n        name: 'Color 7',\n        hex: '#800080'\n      }, {\n        name: 'Color 8',\n        hex: '#808000'\n      }, {\n        name: 'Color 9',\n        hex: '#800000'\n      }, {\n        name: 'Color 10',\n        hex: '#008080'\n      }];\n      this.displayedColors = [];\n      this.currentPage = 0;\n      this.updateDisplayedColors();\n    }\n    updateDisplayedColors() {\n      const startIndex = this.currentPage * 5;\n      this.displayedColors = this.colors.slice(startIndex, startIndex + 5);\n    }\n    nextPage() {\n      if ((this.currentPage + 1) * 5 < this.colors.length) {\n        this.currentPage++;\n        this.updateDisplayedColors();\n      }\n    }\n    previousPage() {\n      if (this.currentPage > 0) {\n        this.currentPage--;\n        this.updateDisplayedColors();\n      }\n    }\n    updateColor(newHex, index) {\n      this.colors[index].hex = newHex;\n    }\n    saveColors() {\n      console.log('Colors saved:', this.colors);\n    }\n    static #_ = this.ɵfac = function EditSyntaxComponent_Factory(t) {\n      return new (t || EditSyntaxComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditSyntaxComponent,\n      selectors: [[\"app-edit-syntax\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 13,\n      vars: 3,\n      consts: [[1, \"general\"], [1, \"color-boxes\"], [1, \"pagination-buttons\"], [3, \"click\", \"disabled\"], [\"class\", \"color-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"color-item\"], [1, \"color-box\"], [\"type\", \"text\", 3, \"input\", \"value\"]],\n      template: function EditSyntaxComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Edit Syntax\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function EditSyntaxComponent_Template_button_click_5_listener() {\n            return ctx.previousPage();\n          });\n          i0.ɵɵtext(6, \"\\u2039\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(7, EditSyntaxComponent_div_7_Template, 5, 4, \"div\", 4);\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function EditSyntaxComponent_Template_button_click_9_listener() {\n            return ctx.nextPage();\n          });\n          i0.ɵɵtext(10, \"\\u203A\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function EditSyntaxComponent_Template_button_click_11_listener() {\n            return ctx.saveColors();\n          });\n          i0.ɵɵtext(12, \"Save\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", ctx.currentPage === 0);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.displayedColors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", (ctx.currentPage + 1) * 5 >= ctx.colors.length);\n        }\n      },\n      dependencies: [CommonModule, i1.NgForOf, FormsModule],\n      styles: [\"h2[_ngcontent-%COMP%]{align-self:center}button[_ngcontent-%COMP%]{align-self:flex-end;background-color:gray;border:none;border-radius:2px}.general[_ngcontent-%COMP%], .color-item[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;text-align:center}.color-box[_ngcontent-%COMP%]{width:80px;height:80px;margin-bottom:10px;border:2px solid grey;border-radius:2px}input[type=text][_ngcontent-%COMP%]{border:2px solid grey;border-radius:1px;width:100px;margin-bottom:20px}.color-boxes[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px}.pagination-buttons[_ngcontent-%COMP%]{height:100%;display:flex;align-items:center}.pagination-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{height:100%;align-content:center;background-color:gray;border:none;width:30px;height:30px;font-size:larger;font-weight:700}\"]\n    });\n  }\n  return EditSyntaxComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}